{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\Code for fun\\\\React todo list\\\\React_ToDo_List\\\\src\\\\components\\\\ToDoList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from \"react\";\nimport \"./ToDoList.css\";\nimport Task from \"./Task.tsx\";\nimport { TodoContext } from \"../Contexts/TodoContext/index.tsx\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ToDoList() {\n  _s();\n  const [newDescription, setNewDescription] = useState(\"\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [isFiltered, setIsFiltered] = useState(false);\n  const [filteredTodo, setFilteredTodo] = useState([]);\n  const {\n    todos,\n    createTodo\n  } = useContext(TodoContext);\n  useEffect(() => {\n    setFilteredTodo(searchTerm ? todos.filter(task => {\n      return task.description.toLocaleLowerCase().includes(searchTerm.toLocaleLowerCase());\n    }) : todos);\n  }, [todos, searchTerm]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"toDoList\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter_todo\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"filtervalue\",\n          placeholder: \"search\",\n          onChange: e => {\n            setIsFiltered(true);\n            setSearchTerm(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"To Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tableContent\",\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: filteredTodo === null || filteredTodo === void 0 ? void 0 : filteredTodo.map((task, key) => {\n            if (searchTerm === task.description) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Task, {\n                  task: task\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 21\n                }, this)\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 19\n              }, this);\n            } else {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Task, {\n                  task: task\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 21\n                }, this)\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this);\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addTodoTask\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inputTask\",\n        type: \"text\",\n        value: newDescription,\n        onChange: event => {\n          setNewDescription(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: event => {\n            if (createTodo) createTodo(newDescription);\n            setNewDescription(\"\");\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"+ Add new Task \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(ToDoList, \"nr+ziwGIKDoUaN0CvAufugeL5oo=\");\n_c = ToDoList;\nexport default ToDoList;\n\n// // Set localStorage Arrays\n// function updateSavedColumns() {\n//   listArrays = [backlogListArray, progressListArray, completeListArray, onHoldListArray];\n//   const arrayNames = ['backlog', 'progress', 'complete', 'onHold'];\n//   arrayNames.forEach((arrayName, index) => {\n//     localStorage.setItem(`${arrayName}Items`, JSON.stringify(listArrays[index]));\n//   });\n// }\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","useContext","useEffect","Task","TodoContext","jsxDEV","_jsxDEV","Fragment","_Fragment","ToDoList","_s","newDescription","setNewDescription","searchTerm","setSearchTerm","isFiltered","setIsFiltered","filteredTodo","setFilteredTodo","todos","createTodo","filter","task","description","toLocaleLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","value","map","key","event","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/Code for fun/React todo list/React_ToDo_List/src/components/ToDoList.tsx"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport \"./ToDoList.css\";\nimport Task from \"./Task.tsx\";\nimport { TodoContext } from \"../Contexts/TodoContext/index.tsx\";\n\nfunction ToDoList() {\n  const [newDescription, setNewDescription] = useState(\"\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [isFiltered, setIsFiltered] = useState(false);\n  const [filteredTodo, setFilteredTodo] = useState<any>([]);\n\n  const { todos, createTodo } = useContext(TodoContext);\n  useEffect(() => {\n    setFilteredTodo(\n      searchTerm\n        ? todos.filter((task) => {\n            return task.description\n              .toLocaleLowerCase()\n              .includes(searchTerm.toLocaleLowerCase());\n          })\n        : todos\n    );\n  }, [todos, searchTerm]);\n\n  return (\n    <div className=\"toDoList\">\n      <div className=\"header\">\n        <div className=\"filter_todo\">\n          <label>Search</label>\n          <input\n            type=\"text\"\n            className=\"filtervalue\"\n            placeholder=\"search\"\n            onChange={(e) => {\n              setIsFiltered(true);\n              setSearchTerm(e.target.value);\n            }}\n          />\n        </div>\n        <h1>To Do List</h1>\n      </div>\n      <div className=\"tableContent\">\n        <>\n          <li>\n            {filteredTodo?.map((task, key) => {\n              if (searchTerm === task.description) {\n                return (\n                  <div key={key}>\n                    <Task task={task} />\n                  </div>\n                );\n              } else {\n                return (\n                  <div key={key}>\n                    <Task task={task} />\n                  </div>\n                );\n              }\n            })}\n          </li>\n        </>\n      </div>\n      <div className=\"addTodoTask\">\n        <input\n          className=\"inputTask\"\n          type=\"text\"\n          value={newDescription}\n          onChange={(event) => {\n            setNewDescription(event.target.value);\n          }}\n        ></input>\n        <div>\n          <button\n            onClick={(event) => {\n              if (createTodo) createTodo(newDescription);\n              setNewDescription(\"\");\n            }}\n          >\n            <span>+ Add new Task </span>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ToDoList;\n\n// // Set localStorage Arrays\n// function updateSavedColumns() {\n//   listArrays = [backlogListArray, progressListArray, completeListArray, onHoldListArray];\n//   const arrayNames = ['backlog', 'progress', 'complete', 'onHold'];\n//   arrayNames.forEach((arrayName, index) => {\n//     localStorage.setItem(`${arrayName}Items`, JSON.stringify(listArrays[index]));\n//   });\n// }\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}